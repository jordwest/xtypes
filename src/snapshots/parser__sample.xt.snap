---
created: "2019-04-15T22:04:16.122762Z"
creator: insta@0.6.2
source: src/parser.rs
expression: file
---
XtFile {
    module_info: ModuleInfo {
        name: "Sample.Test",
        attrs: [
            Attribute {
                name: "output",
                value: "/sample/test/somefile.txt"
            }
        ]
    },
    use_imports: [
        ModuleUse {
            attrs: [],
            filename: "prelude.xt",
            ident: Wildcard
        }
    ],
    messages: [
        Message {
            name: "EnumSample",
            attrs: [
                Attribute {
                    name: "doc",
                    value: "This message could be one of three shapes"
                }
            ],
            value: Enum(
                EnumMessage {
                    variants: [
                        EnumVariant {
                            name: "One",
                            attrs: [
                                Attribute {
                                    name: "thing.stuff",
                                    value: "xyz"
                                },
                                Attribute {
                                    name: "json.tag",
                                    value: "A"
                                }
                            ],
                            content: None
                        },
                        EnumVariant {
                            name: "Two",
                            attrs: [
                                Attribute {
                                    name: "blah",
                                    value: "X"
                                }
                            ],
                            content: Some(
                                Tuple(
                                    [
                                        "StructSample",
                                        "Boolean"
                                    ]
                                )
                            )
                        },
                        EnumVariant {
                            name: "Three",
                            attrs: [],
                            content: None
                        }
                    ]
                }
            )
        },
        Message {
            name: "StructSample",
            attrs: [
                Attribute {
                    name: "doc",
                    value: "Example of a struct/record type"
                },
                Attribute {
                    name: "http.method",
                    value: "GET"
                }
            ],
            value: Struct(
                StructMessage {
                    fields: [
                        StructField {
                            name: "repeated_field",
                            type_name: Generic(
                                "Thing",
                                Generic(
                                    "Array",
                                    Concrete(
                                        "string"
                                    )
                                )
                            ),
                            is_optional: false,
                            attrs: [
                                Attribute {
                                    name: "json.key",
                                    value: "X"
                                }
                            ]
                        },
                        StructField {
                            name: "optional_field",
                            type_name: Concrete(
                                "type"
                            ),
                            is_optional: true,
                            attrs: [
                                Attribute {
                                    name: "json.key",
                                    value: "Y"
                                }
                            ]
                        }
                    ]
                }
            )
        }
    ]
}
